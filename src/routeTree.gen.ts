/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as baseLayoutRouteImport } from './routes/(base)/_layout'
import { Route as authSigninRouteImport } from './routes/(auth)/signin'
import { Route as baseLayoutIndexRouteImport } from './routes/(base)/_layout.index'
import { Route as authSignupIndexRouteImport } from './routes/(auth)/signup.index'
import { Route as baseLayoutGroupsRouteImport } from './routes/(base)/_layout.groups'
import { Route as baseLayoutCallsRouteImport } from './routes/(base)/_layout.calls'
import { Route as authSignupProfileRouteImport } from './routes/(auth)/signup.profile'

const baseRouteImport = createFileRoute('/(base)')()

const baseRoute = baseRouteImport.update({
  id: '/(base)',
  getParentRoute: () => rootRouteImport,
} as any)
const baseLayoutRoute = baseLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => baseRoute,
} as any)
const authSigninRoute = authSigninRouteImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const baseLayoutIndexRoute = baseLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => baseLayoutRoute,
} as any)
const authSignupIndexRoute = authSignupIndexRouteImport.update({
  id: '/(auth)/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const baseLayoutGroupsRoute = baseLayoutGroupsRouteImport.update({
  id: '/groups',
  path: '/groups',
  getParentRoute: () => baseLayoutRoute,
} as any)
const baseLayoutCallsRoute = baseLayoutCallsRouteImport.update({
  id: '/calls',
  path: '/calls',
  getParentRoute: () => baseLayoutRoute,
} as any)
const authSignupProfileRoute = authSignupProfileRouteImport.update({
  id: '/(auth)/signup/profile',
  path: '/signup/profile',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/signin': typeof authSigninRoute
  '/': typeof baseLayoutIndexRoute
  '/signup/profile': typeof authSignupProfileRoute
  '/calls': typeof baseLayoutCallsRoute
  '/groups': typeof baseLayoutGroupsRoute
  '/signup': typeof authSignupIndexRoute
}
export interface FileRoutesByTo {
  '/signin': typeof authSigninRoute
  '/signup/profile': typeof authSignupProfileRoute
  '/calls': typeof baseLayoutCallsRoute
  '/groups': typeof baseLayoutGroupsRoute
  '/signup': typeof authSignupIndexRoute
  '/': typeof baseLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)/signin': typeof authSigninRoute
  '/(base)': typeof baseRouteWithChildren
  '/(base)/_layout': typeof baseLayoutRouteWithChildren
  '/(auth)/signup/profile': typeof authSignupProfileRoute
  '/(base)/_layout/calls': typeof baseLayoutCallsRoute
  '/(base)/_layout/groups': typeof baseLayoutGroupsRoute
  '/(auth)/signup/': typeof authSignupIndexRoute
  '/(base)/_layout/': typeof baseLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/signin'
    | '/'
    | '/signup/profile'
    | '/calls'
    | '/groups'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/signin' | '/signup/profile' | '/calls' | '/groups' | '/signup' | '/'
  id:
    | '__root__'
    | '/(auth)/signin'
    | '/(base)'
    | '/(base)/_layout'
    | '/(auth)/signup/profile'
    | '/(base)/_layout/calls'
    | '/(base)/_layout/groups'
    | '/(auth)/signup/'
    | '/(base)/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authSigninRoute: typeof authSigninRoute
  baseRoute: typeof baseRouteWithChildren
  authSignupProfileRoute: typeof authSignupProfileRoute
  authSignupIndexRoute: typeof authSignupIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(base)': {
      id: '/(base)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof baseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(base)/_layout': {
      id: '/(base)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof baseLayoutRouteImport
      parentRoute: typeof baseRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(base)/_layout/': {
      id: '/(base)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof baseLayoutIndexRouteImport
      parentRoute: typeof baseLayoutRoute
    }
    '/(auth)/signup/': {
      id: '/(auth)/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(base)/_layout/groups': {
      id: '/(base)/_layout/groups'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof baseLayoutGroupsRouteImport
      parentRoute: typeof baseLayoutRoute
    }
    '/(base)/_layout/calls': {
      id: '/(base)/_layout/calls'
      path: '/calls'
      fullPath: '/calls'
      preLoaderRoute: typeof baseLayoutCallsRouteImport
      parentRoute: typeof baseLayoutRoute
    }
    '/(auth)/signup/profile': {
      id: '/(auth)/signup/profile'
      path: '/signup/profile'
      fullPath: '/signup/profile'
      preLoaderRoute: typeof authSignupProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface baseLayoutRouteChildren {
  baseLayoutCallsRoute: typeof baseLayoutCallsRoute
  baseLayoutGroupsRoute: typeof baseLayoutGroupsRoute
  baseLayoutIndexRoute: typeof baseLayoutIndexRoute
}

const baseLayoutRouteChildren: baseLayoutRouteChildren = {
  baseLayoutCallsRoute: baseLayoutCallsRoute,
  baseLayoutGroupsRoute: baseLayoutGroupsRoute,
  baseLayoutIndexRoute: baseLayoutIndexRoute,
}

const baseLayoutRouteWithChildren = baseLayoutRoute._addFileChildren(
  baseLayoutRouteChildren,
)

interface baseRouteChildren {
  baseLayoutRoute: typeof baseLayoutRouteWithChildren
}

const baseRouteChildren: baseRouteChildren = {
  baseLayoutRoute: baseLayoutRouteWithChildren,
}

const baseRouteWithChildren = baseRoute._addFileChildren(baseRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  authSigninRoute: authSigninRoute,
  baseRoute: baseRouteWithChildren,
  authSignupProfileRoute: authSignupProfileRoute,
  authSignupIndexRoute: authSignupIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
